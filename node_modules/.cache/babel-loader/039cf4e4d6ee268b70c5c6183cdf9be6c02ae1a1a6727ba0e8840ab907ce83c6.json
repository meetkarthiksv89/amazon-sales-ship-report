{"ast":null,"code":"var _jsxFileName = \"/Users/karthiksv/Development/ShipCal/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport Papa from 'papaparse';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [orderData, setOrderData] = useState([]);\n  const [ratesData, setRatesData] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [uploadStatus, setUploadStatus] = useState({\n    orders: false,\n    rates: false\n  });\n  const [processingStats, setProcessingStats] = useState({\n    totalOrders: 0,\n    shippedOrders: 0,\n    filteredOut: 0\n  });\n  const DEFAULT_RATE = 60; // Default rate per kg if state not found\n\n  // Parse CSV files\n  const parseCSV = useCallback((file, callback) => {\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: results => {\n        if (results.errors.length > 0) {\n          setError(`CSV parsing error: ${results.errors[0].message}`);\n          return;\n        }\n        callback(results.data);\n      },\n      error: error => {\n        setError(`Failed to parse CSV: ${error.message}`);\n      }\n    });\n  }, []);\n\n  // Handle order file upload\n  const handleOrderUpload = useCallback(event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setError('');\n    setLoading(true);\n    parseCSV(file, data => {\n      setOrderData(data);\n      setUploadStatus(prev => ({\n        ...prev,\n        orders: true\n      }));\n      setLoading(false);\n    });\n  }, [parseCSV]);\n\n  // Handle rates file upload\n  const handleRatesUpload = useCallback(event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setError('');\n    setLoading(true);\n    parseCSV(file, data => {\n      setRatesData(data);\n      setUploadStatus(prev => ({\n        ...prev,\n        rates: true\n      }));\n      setLoading(false);\n    });\n  }, [parseCSV]);\n\n  // Extract pack information from product name\n  const extractPackInfo = productName => {\n    const packOfOne = /Pack of 1/i.test(productName) ? 1 : 0;\n    const packOfTwo = /Pack of 2/i.test(productName) ? 1 : 0;\n    return {\n      packOfOne,\n      packOfTwo\n    };\n  };\n\n  // Process orders and calculate shipping\n  const processOrders = useCallback(() => {\n    if (!orderData.length || !ratesData.length) {\n      setError('Please upload both order and rates CSV files');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      // Create rates lookup\n      const ratesLookup = {};\n      ratesData.forEach(row => {\n        var _row$State;\n        const state = (_row$State = row.State) === null || _row$State === void 0 ? void 0 : _row$State.trim().toUpperCase();\n        const rate = parseFloat(row.Rate_per_kg);\n        if (state && !isNaN(rate)) {\n          ratesLookup[state] = rate;\n        }\n      });\n\n      // Filter for shipped orders only\n      const shippedOrders = orderData.filter(row => {\n        var _row$orderStatus;\n        const orderStatus = (_row$orderStatus = row['order-status']) === null || _row$orderStatus === void 0 ? void 0 : _row$orderStatus.trim().toLowerCase();\n        return orderStatus === 'shipped';\n      });\n      console.log(`Total orders: ${orderData.length}, Shipped orders: ${shippedOrders.length}`);\n\n      // Group orders by Order ID\n      const orderGroups = {};\n      shippedOrders.forEach(row => {\n        var _row$amazonOrderId, _row$productName, _row$shipState;\n        const orderId = (_row$amazonOrderId = row['amazon-order-id']) === null || _row$amazonOrderId === void 0 ? void 0 : _row$amazonOrderId.trim();\n        const productName = (_row$productName = row['product-name']) === null || _row$productName === void 0 ? void 0 : _row$productName.trim();\n        const quantity = parseInt(row.quantity) || 1;\n        const state = (_row$shipState = row['ship-state']) === null || _row$shipState === void 0 ? void 0 : _row$shipState.trim().toUpperCase();\n        if (!orderId || !productName) return;\n        if (!orderGroups[orderId]) {\n          orderGroups[orderId] = {\n            orderId,\n            state,\n            packOfOne: 0,\n            packOfTwo: 0,\n            items: []\n          };\n        }\n        const packInfo = extractPackInfo(productName);\n        orderGroups[orderId].packOfOne += packInfo.packOfOne * quantity;\n        orderGroups[orderId].packOfTwo += packInfo.packOfTwo * quantity;\n        orderGroups[orderId].items.push({\n          productName,\n          quantity,\n          ...packInfo\n        });\n      });\n\n      // Calculate shipping for each order\n      const processedResults = Object.values(orderGroups).map(order => {\n        const totalWeight = order.packOfOne * 0.5 + order.packOfTwo * 1.0;\n        const roundedWeight = Math.ceil(totalWeight);\n        const rate = ratesLookup[order.state] || DEFAULT_RATE;\n        const shippingCost = roundedWeight * rate;\n        return {\n          orderId: order.orderId,\n          state: order.state,\n          packOfOne: order.packOfOne,\n          packOfTwo: order.packOfTwo,\n          totalWeight: totalWeight.toFixed(2),\n          roundedWeight,\n          ratePerKg: rate,\n          shippingCost,\n          stateFound: !!ratesLookup[order.state]\n        };\n      });\n      setResults(processedResults);\n      setLoading(false);\n    } catch (err) {\n      setError(`Processing error: ${err.message}`);\n      setLoading(false);\n    }\n  }, [orderData, ratesData]);\n\n  // Export results to CSV\n  const exportResults = useCallback(() => {\n    if (!results.length) return;\n    const csvContent = Papa.unparse({\n      fields: ['Order ID', 'State', 'Pack of One', 'Pack of Two', 'Total Weight (kg)', 'Rounded Weight (kg)', 'Rate per kg', 'Shipping Cost'],\n      data: results.map(row => [row.orderId, row.state, row.packOfOne, row.packOfTwo, row.totalWeight, row.roundedWeight, row.ratePerKg, row.shippingCost])\n    });\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = 'shipping_calculation_results.csv';\n    link.click();\n  }, [results]);\n\n  // Calculate total shipping cost\n  const totalShippingCost = results.reduce((sum, order) => sum + order.shippingCost, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83D\\uDE9A Amazon Order Shipping Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload your Amazon order report and state-wise shipping rates to calculate shipping costs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u26A0\\uFE0F \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCCB Amazon Order Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: handleOrderUpload,\n            disabled: loading,\n            className: \"file-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status ${uploadStatus.orders ? 'success' : 'pending'}`,\n            children: uploadStatus.orders ? '✅ Uploaded' : '⏳ Pending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), orderData.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"file-info\",\n            children: [orderData.length, \" orders loaded\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCB0 State-wise Shipping Rates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: handleRatesUpload,\n            disabled: loading,\n            className: \"file-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status ${uploadStatus.rates ? 'success' : 'pending'}`,\n            children: uploadStatus.rates ? '✅ Uploaded' : '⏳ Pending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), ratesData.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"file-info\",\n            children: [ratesData.length, \" states loaded\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-section\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: processOrders,\n          disabled: !uploadStatus.orders || !uploadStatus.rates || loading,\n          className: \"process-button\",\n          children: loading ? '⏳ Processing...' : '🧮 Calculate Shipping Costs'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83D\\uDCCA Shipping Calculation Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportResults,\n            className: \"export-button\",\n            children: \"\\uD83D\\uDCE5 Export CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"results-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Order ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"State\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Pack of One\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Pack of Two\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Total Weight (kg)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Rounded Weight (kg)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Rate per kg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Shipping Cost\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: results.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: !row.stateFound ? 'warning-row' : '',\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.orderId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [row.state, !row.stateFound && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"warning-badge\",\n                    children: \"\\u26A0\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.packOfOne\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.packOfTwo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.totalWeight\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.roundedWeight\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"\\u20B9\", row.ratePerKg]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"\\u20B9\", row.shippingCost]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83D\\uDCC8 Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-stats\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Total Orders:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-value\",\n                  children: results.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Total Shipping Cost:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-value\",\n                  children: [\"\\u20B9\", totalShippingCost.toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Average Cost per Order:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-value\",\n                  children: [\"\\u20B9\", Math.round(totalShippingCost / results.length)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), results.some(r => !r.stateFound) && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"warning-text\",\n              children: [\"\\u26A0\\uFE0F Some states used default rate (\\u20B9\", DEFAULT_RATE, \"/kg) - not found in rates file\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Built for efficient e-commerce shipping cost calculation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gttbjLjYir1MUvtqAMjsrNiM+TE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","Papa","jsxDEV","_jsxDEV","App","_s","orderData","setOrderData","ratesData","setRatesData","results","setResults","loading","setLoading","error","setError","uploadStatus","setUploadStatus","orders","rates","processingStats","setProcessingStats","totalOrders","shippedOrders","filteredOut","DEFAULT_RATE","parseCSV","file","callback","parse","header","skipEmptyLines","complete","errors","length","message","data","handleOrderUpload","event","target","files","prev","handleRatesUpload","extractPackInfo","productName","packOfOne","test","packOfTwo","processOrders","ratesLookup","forEach","row","_row$State","state","State","trim","toUpperCase","rate","parseFloat","Rate_per_kg","isNaN","filter","_row$orderStatus","orderStatus","toLowerCase","console","log","orderGroups","_row$amazonOrderId","_row$productName","_row$shipState","orderId","quantity","parseInt","items","packInfo","push","processedResults","Object","values","map","order","totalWeight","roundedWeight","Math","ceil","shippingCost","toFixed","ratePerKg","stateFound","err","exportResults","csvContent","unparse","fields","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","click","totalShippingCost","reduce","sum","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","disabled","onClick","index","toLocaleString","round","some","r","_c","$RefreshReg$"],"sources":["/Users/karthiksv/Development/ShipCal/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport Papa from 'papaparse';\nimport './App.css';\n\nconst App = () => {\n  const [orderData, setOrderData] = useState([]);\n  const [ratesData, setRatesData] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [uploadStatus, setUploadStatus] = useState({\n    orders: false,\n    rates: false\n  });\n  const [processingStats, setProcessingStats] = useState({\n    totalOrders: 0,\n    shippedOrders: 0,\n    filteredOut: 0\n  });\n\n  const DEFAULT_RATE = 60; // Default rate per kg if state not found\n\n  // Parse CSV files\n  const parseCSV = useCallback((file, callback) => {\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: (results) => {\n        if (results.errors.length > 0) {\n          setError(`CSV parsing error: ${results.errors[0].message}`);\n          return;\n        }\n        callback(results.data);\n      },\n      error: (error) => {\n        setError(`Failed to parse CSV: ${error.message}`);\n      }\n    });\n  }, []);\n\n  // Handle order file upload\n  const handleOrderUpload = useCallback((event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    setError('');\n    setLoading(true);\n\n    parseCSV(file, (data) => {\n      setOrderData(data);\n      setUploadStatus(prev => ({ ...prev, orders: true }));\n      setLoading(false);\n    });\n  }, [parseCSV]);\n\n  // Handle rates file upload\n  const handleRatesUpload = useCallback((event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    setError('');\n    setLoading(true);\n\n    parseCSV(file, (data) => {\n      setRatesData(data);\n      setUploadStatus(prev => ({ ...prev, rates: true }));\n      setLoading(false);\n    });\n  }, [parseCSV]);\n\n  // Extract pack information from product name\n  const extractPackInfo = (productName) => {\n    const packOfOne = /Pack of 1/i.test(productName) ? 1 : 0;\n    const packOfTwo = /Pack of 2/i.test(productName) ? 1 : 0;\n    return { packOfOne, packOfTwo };\n  };\n\n  // Process orders and calculate shipping\n  const processOrders = useCallback(() => {\n    if (!orderData.length || !ratesData.length) {\n      setError('Please upload both order and rates CSV files');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    try {\n      // Create rates lookup\n      const ratesLookup = {};\n      ratesData.forEach(row => {\n        const state = row.State?.trim().toUpperCase();\n        const rate = parseFloat(row.Rate_per_kg);\n        if (state && !isNaN(rate)) {\n          ratesLookup[state] = rate;\n        }\n      });\n\n      // Filter for shipped orders only\n      const shippedOrders = orderData.filter(row => {\n        const orderStatus = row['order-status']?.trim().toLowerCase();\n        return orderStatus === 'shipped';\n      });\n\n      console.log(`Total orders: ${orderData.length}, Shipped orders: ${shippedOrders.length}`);\n\n      // Group orders by Order ID\n      const orderGroups = {};\n      shippedOrders.forEach(row => {\n        const orderId = row['amazon-order-id']?.trim();\n        const productName = row['product-name']?.trim();\n        const quantity = parseInt(row.quantity) || 1;\n        const state = row['ship-state']?.trim().toUpperCase();\n\n        if (!orderId || !productName) return;\n\n        if (!orderGroups[orderId]) {\n          orderGroups[orderId] = {\n            orderId,\n            state,\n            packOfOne: 0,\n            packOfTwo: 0,\n            items: []\n          };\n        }\n\n        const packInfo = extractPackInfo(productName);\n        orderGroups[orderId].packOfOne += packInfo.packOfOne * quantity;\n        orderGroups[orderId].packOfTwo += packInfo.packOfTwo * quantity;\n        orderGroups[orderId].items.push({ productName, quantity, ...packInfo });\n      });\n\n      // Calculate shipping for each order\n      const processedResults = Object.values(orderGroups).map(order => {\n        const totalWeight = (order.packOfOne * 0.5) + (order.packOfTwo * 1.0);\n        const roundedWeight = Math.ceil(totalWeight);\n        const rate = ratesLookup[order.state] || DEFAULT_RATE;\n        const shippingCost = roundedWeight * rate;\n\n        return {\n          orderId: order.orderId,\n          state: order.state,\n          packOfOne: order.packOfOne,\n          packOfTwo: order.packOfTwo,\n          totalWeight: totalWeight.toFixed(2),\n          roundedWeight,\n          ratePerKg: rate,\n          shippingCost,\n          stateFound: !!ratesLookup[order.state]\n        };\n      });\n\n      setResults(processedResults);\n      setLoading(false);\n    } catch (err) {\n      setError(`Processing error: ${err.message}`);\n      setLoading(false);\n    }\n  }, [orderData, ratesData]);\n\n  // Export results to CSV\n  const exportResults = useCallback(() => {\n    if (!results.length) return;\n\n    const csvContent = Papa.unparse({\n      fields: [\n        'Order ID',\n        'State',\n        'Pack of One',\n        'Pack of Two',\n        'Total Weight (kg)',\n        'Rounded Weight (kg)',\n        'Rate per kg',\n        'Shipping Cost'\n      ],\n      data: results.map(row => [\n        row.orderId,\n        row.state,\n        row.packOfOne,\n        row.packOfTwo,\n        row.totalWeight,\n        row.roundedWeight,\n        row.ratePerKg,\n        row.shippingCost\n      ])\n    });\n\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = 'shipping_calculation_results.csv';\n    link.click();\n  }, [results]);\n\n  // Calculate total shipping cost\n  const totalShippingCost = results.reduce((sum, order) => sum + order.shippingCost, 0);\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <header className=\"header\">\n          <h1>🚚 Amazon Order Shipping Calculator</h1>\n          <p>Upload your Amazon order report and state-wise shipping rates to calculate shipping costs</p>\n        </header>\n\n        {error && (\n          <div className=\"error-message\">\n            <span>⚠️ {error}</span>\n          </div>\n        )}\n\n        <div className=\"upload-section\">\n          <div className=\"upload-card\">\n            <h3>📋 Amazon Order Report</h3>\n            <input\n              type=\"file\"\n              accept=\".csv\"\n              onChange={handleOrderUpload}\n              disabled={loading}\n              className=\"file-input\"\n            />\n            <div className={`status ${uploadStatus.orders ? 'success' : 'pending'}`}>\n              {uploadStatus.orders ? '✅ Uploaded' : '⏳ Pending'}\n            </div>\n            {orderData.length > 0 && (\n              <p className=\"file-info\">{orderData.length} orders loaded</p>\n            )}\n          </div>\n\n          <div className=\"upload-card\">\n            <h3>💰 State-wise Shipping Rates</h3>\n            <input\n              type=\"file\"\n              accept=\".csv\"\n              onChange={handleRatesUpload}\n              disabled={loading}\n              className=\"file-input\"\n            />\n            <div className={`status ${uploadStatus.rates ? 'success' : 'pending'}`}>\n              {uploadStatus.rates ? '✅ Uploaded' : '⏳ Pending'}\n            </div>\n            {ratesData.length > 0 && (\n              <p className=\"file-info\">{ratesData.length} states loaded</p>\n            )}\n          </div>\n        </div>\n\n        <div className=\"action-section\">\n          <button\n            onClick={processOrders}\n            disabled={!uploadStatus.orders || !uploadStatus.rates || loading}\n            className=\"process-button\"\n          >\n            {loading ? '⏳ Processing...' : '🧮 Calculate Shipping Costs'}\n          </button>\n        </div>\n\n        {results.length > 0 && (\n          <div className=\"results-section\">\n            <div className=\"results-header\">\n              <h2>📊 Shipping Calculation Results</h2>\n              <button onClick={exportResults} className=\"export-button\">\n                📥 Export CSV\n              </button>\n            </div>\n\n            <div className=\"table-container\">\n              <table className=\"results-table\">\n                <thead>\n                  <tr>\n                    <th>Order ID</th>\n                    <th>State</th>\n                    <th>Pack of One</th>\n                    <th>Pack of Two</th>\n                    <th>Total Weight (kg)</th>\n                    <th>Rounded Weight (kg)</th>\n                    <th>Rate per kg</th>\n                    <th>Shipping Cost</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {results.map((row, index) => (\n                    <tr key={index} className={!row.stateFound ? 'warning-row' : ''}>\n                      <td>{row.orderId}</td>\n                      <td>\n                        {row.state}\n                        {!row.stateFound && <span className=\"warning-badge\">⚠️</span>}\n                      </td>\n                      <td>{row.packOfOne}</td>\n                      <td>{row.packOfTwo}</td>\n                      <td>{row.totalWeight}</td>\n                      <td>{row.roundedWeight}</td>\n                      <td>₹{row.ratePerKg}</td>\n                      <td>₹{row.shippingCost}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n\n            <div className=\"summary\">\n              <div className=\"summary-card\">\n                <h3>📈 Summary</h3>\n                <div className=\"summary-stats\">\n                  <div className=\"stat\">\n                    <span className=\"stat-label\">Total Orders:</span>\n                    <span className=\"stat-value\">{results.length}</span>\n                  </div>\n                  <div className=\"stat\">\n                    <span className=\"stat-label\">Total Shipping Cost:</span>\n                    <span className=\"stat-value\">₹{totalShippingCost.toLocaleString()}</span>\n                  </div>\n                  <div className=\"stat\">\n                    <span className=\"stat-label\">Average Cost per Order:</span>\n                    <span className=\"stat-value\">₹{Math.round(totalShippingCost / results.length)}</span>\n                  </div>\n                </div>\n                {results.some(r => !r.stateFound) && (\n                  <p className=\"warning-text\">\n                    ⚠️ Some states used default rate (₹{DEFAULT_RATE}/kg) - not found in rates file\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n\n        <footer className=\"footer\">\n          <p>Built for efficient e-commerce shipping cost calculation</p>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}