{"ast":null,"code":"var _jsxFileName = \"/Users/karthiksv/Development/ShipCal/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [orderData, setOrderData] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [uploadStatus, setUploadStatus] = useState({\n    orders: false\n  });\n  const [processingStats, setProcessingStats] = useState({\n    totalOrders: 0,\n    shippedOrders: 0,\n    filteredOut: 0\n  });\n  const [fileInfo, setFileInfo] = useState({\n    name: '',\n    type: '',\n    converted: false\n  });\n  const [shippingRates, setShippingRates] = useState({});\n  const [ratesLoaded, setRatesLoaded] = useState(false);\n  const DEFAULT_RATE = 60; // Default rate per kg if state not found\n\n  // Load shipping rates from CSV file\n  const loadShippingRates = useCallback(async () => {\n    try {\n      const response = await fetch('/state_wise_shipping_rates.csv');\n      if (!response.ok) {\n        throw new Error('Failed to load shipping rates file');\n      }\n      const csvText = await response.text();\n      Papa.parse(csvText, {\n        header: true,\n        skipEmptyLines: true,\n        complete: results => {\n          const rates = {};\n          results.data.forEach(row => {\n            var _row$State;\n            const state = (_row$State = row.State) === null || _row$State === void 0 ? void 0 : _row$State.trim().toUpperCase();\n            const rate = parseFloat(row.Rate_per_kg);\n            if (state && !isNaN(rate)) {\n              rates[state] = rate;\n            }\n          });\n          setShippingRates(rates);\n          setRatesLoaded(true);\n        },\n        error: error => {\n          console.error('Error parsing shipping rates:', error);\n          setRatesLoaded(true); // Allow app to continue with default rates\n        }\n      });\n    } catch (error) {\n      console.error('Error loading shipping rates:', error);\n      setRatesLoaded(true); // Allow app to continue with default rates\n    }\n  }, []);\n\n  // Load shipping rates on component mount\n  useEffect(() => {\n    loadShippingRates();\n  }, [loadShippingRates]);\n\n  // Parse CSV or TXT files\n  const parseFile = useCallback((file, callback) => {\n    const fileExtension = file.name.toLowerCase().split('.').pop();\n    if (fileExtension === 'txt') {\n      // Handle TXT file - assume tab-delimited Amazon report format\n      const reader = new FileReader();\n      reader.onload = e => {\n        try {\n          const text = e.target.result;\n          const lines = text.split('\\n').filter(line => line.trim());\n          if (lines.length === 0) {\n            setError('TXT file appears to be empty');\n            return;\n          }\n\n          // Convert tab-delimited to CSV format\n          const csvContent = lines.map((line, index) => {\n            // Split by tabs and wrap fields with commas in quotes\n            const fields = line.split('\\t');\n\n            // Basic validation - ensure we have reasonable number of fields\n            if (index === 0 && fields.length < 5) {\n              throw new Error('TXT file doesn\\'t appear to be a valid Amazon order report (too few columns)');\n            }\n            return fields.map(field => {\n              field = field.trim();\n              // If field contains comma, quote, or newline, quote it\n              if (field.includes(',') || field.includes('\"') || field.includes('\\n')) {\n                return `\"${field.replace(/\"/g, '\"\"')}\"`;\n              }\n              return field;\n            }).join(',');\n          }).join('\\n');\n\n          // Create a blob and parse as CSV\n          const csvBlob = new Blob([csvContent], {\n            type: 'text/csv'\n          });\n          Papa.parse(csvBlob, {\n            header: true,\n            skipEmptyLines: true,\n            complete: results => {\n              if (results.errors.length > 0) {\n                setError(`TXT to CSV conversion error: ${results.errors[0].message}`);\n                return;\n              }\n              callback(results.data);\n            },\n            error: error => {\n              setError(`Failed to parse converted CSV: ${error.message}`);\n            }\n          });\n        } catch (error) {\n          setError(`TXT file processing error: ${error.message}`);\n        }\n      };\n      reader.onerror = () => setError('Failed to read TXT file');\n      reader.readAsText(file);\n    } else {\n      // Handle CSV file normally\n      Papa.parse(file, {\n        header: true,\n        skipEmptyLines: true,\n        complete: results => {\n          if (results.errors.length > 0) {\n            setError(`CSV parsing error: ${results.errors[0].message}`);\n            return;\n          }\n          callback(results.data);\n        },\n        error: error => {\n          setError(`Failed to parse CSV: ${error.message}`);\n        }\n      });\n    }\n  }, []);\n\n  // Handle order file upload\n  const handleOrderUpload = useCallback(event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const fileExtension = file.name.toLowerCase().split('.').pop();\n    if (!['txt', 'csv'].includes(fileExtension)) {\n      setError('Please upload a TXT or CSV file');\n      return;\n    }\n    setError('');\n    setLoading(true);\n    setFileInfo({\n      name: file.name,\n      type: fileExtension.toUpperCase(),\n      converted: fileExtension === 'txt'\n    });\n    parseFile(file, data => {\n      setOrderData(data);\n      setUploadStatus(prev => ({\n        ...prev,\n        orders: true\n      }));\n      setLoading(false);\n    });\n  }, [parseFile]);\n\n  // Extract pack information from product name\n  const extractPackInfo = productName => {\n    const packOfOne = /Pack of 1/i.test(productName) ? 1 : 0;\n    const packOfTwo = /Pack of 2/i.test(productName) ? 1 : 0;\n    return {\n      packOfOne,\n      packOfTwo\n    };\n  };\n\n  // Process orders and calculate shipping\n  const processOrders = useCallback(() => {\n    if (!orderData.length) {\n      setError('Please upload the Amazon order report CSV file');\n      return;\n    }\n    if (!ratesLoaded) {\n      setError('Shipping rates are still loading. Please wait...');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      // Filter for shipped orders only\n      const shippedOrders = orderData.filter(row => {\n        var _row$orderStatus;\n        const orderStatus = (_row$orderStatus = row['order-status']) === null || _row$orderStatus === void 0 ? void 0 : _row$orderStatus.trim().toLowerCase();\n        return orderStatus === 'shipped';\n      });\n\n      // Update processing statistics\n      const stats = {\n        totalOrders: orderData.length,\n        shippedOrders: shippedOrders.length,\n        filteredOut: orderData.length - shippedOrders.length\n      };\n      setProcessingStats(stats);\n\n      // Group orders by Order ID\n      const orderGroups = {};\n      shippedOrders.forEach(row => {\n        var _row$amazonOrderId, _row$productName, _row$shipState;\n        const orderId = (_row$amazonOrderId = row['amazon-order-id']) === null || _row$amazonOrderId === void 0 ? void 0 : _row$amazonOrderId.trim();\n        const productName = (_row$productName = row['product-name']) === null || _row$productName === void 0 ? void 0 : _row$productName.trim();\n        const quantity = parseInt(row.quantity) || 1;\n        const state = (_row$shipState = row['ship-state']) === null || _row$shipState === void 0 ? void 0 : _row$shipState.trim().toUpperCase();\n        if (!orderId || !productName) return;\n        if (!orderGroups[orderId]) {\n          orderGroups[orderId] = {\n            orderId,\n            state,\n            packOfOne: 0,\n            packOfTwo: 0,\n            items: []\n          };\n        }\n        const packInfo = extractPackInfo(productName);\n        orderGroups[orderId].packOfOne += packInfo.packOfOne * quantity;\n        orderGroups[orderId].packOfTwo += packInfo.packOfTwo * quantity;\n        orderGroups[orderId].items.push({\n          productName,\n          quantity,\n          ...packInfo\n        });\n      });\n\n      // Calculate shipping for each order\n      const processedResults = Object.values(orderGroups).map(order => {\n        const totalWeight = order.packOfOne * 0.5 + order.packOfTwo * 1.0;\n        const roundedWeight = Math.ceil(totalWeight);\n        const rate = shippingRates[order.state] || DEFAULT_RATE;\n        const shippingCost = roundedWeight * rate;\n        return {\n          orderId: order.orderId,\n          state: order.state,\n          packOfOne: order.packOfOne,\n          packOfTwo: order.packOfTwo,\n          totalWeight: totalWeight.toFixed(2),\n          roundedWeight,\n          ratePerKg: rate,\n          shippingCost,\n          stateFound: !!shippingRates[order.state]\n        };\n      });\n      setResults(processedResults);\n      setLoading(false);\n    } catch (err) {\n      setError(`Processing error: ${err.message}`);\n      setLoading(false);\n    }\n  }, [orderData, shippingRates, ratesLoaded]);\n\n  // Export results to CSV\n  const exportResults = useCallback(() => {\n    if (!results.length) return;\n    const csvContent = Papa.unparse({\n      fields: ['S.No.', 'Order ID', 'State', 'Pack of One', 'Pack of Two', 'Total Weight (kg)', 'Rounded Weight (kg)', 'Rate per kg', 'Shipping Cost'],\n      data: results.map((row, index) => [index + 1, row.orderId, row.state, row.packOfOne, row.packOfTwo, row.totalWeight, row.roundedWeight, row.ratePerKg, row.shippingCost])\n    });\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = 'shipping_calculation_results.csv';\n    link.click();\n  }, [results]);\n\n  // Calculate total shipping cost\n  const totalShippingCost = results.reduce((sum, order) => sum + order.shippingCost, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83D\\uDE9A Amazon Order Shipping Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload your Amazon order report (TXT or CSV) to calculate shipping costs with built-in state-wise rates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u26A0\\uFE0F \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCCB Amazon Order Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-input-info\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Upload TXT or CSV format\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".txt,.csv\",\n            onChange: handleOrderUpload,\n            disabled: loading,\n            className: \"file-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status ${uploadStatus.orders ? 'success' : 'pending'}`,\n            children: uploadStatus.orders ? '✅ Uploaded' : '⏳ Pending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), orderData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"file-info\",\n              children: [orderData.length, \" orders loaded\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-name\",\n                children: [\"\\uD83D\\uDCC4 \", fileInfo.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, this), fileInfo.converted && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"conversion-badge\",\n                children: \"\\uD83D\\uDD04 TXT \\u2192 CSV Converted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rates-info-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCB0 State-wise Shipping Rates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status ${ratesLoaded ? 'success' : 'pending'}`,\n            children: ratesLoaded ? '✅ Rates Loaded from CSV' : '⏳ Loading Rates...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), ratesLoaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"file-info\",\n              children: [Object.keys(shippingRates).length, \" states configured\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rates-preview\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Sample rates:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 22\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rates-examples\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Karnataka: \\u20B9\", shippingRates['KARNATAKA'] || DEFAULT_RATE, \"/kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Tamil Nadu: \\u20B9\", shippingRates['TAMIL NADU'] || DEFAULT_RATE, \"/kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Maharashtra: \\u20B9\", shippingRates['MAHARASHTRA'] || DEFAULT_RATE, \"/kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: loadShippingRates,\n                className: \"refresh-rates-btn\",\n                disabled: loading,\n                children: \"\\uD83D\\uDD04 Refresh Rates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-section\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: processOrders,\n          disabled: !uploadStatus.orders || !ratesLoaded || loading,\n          className: \"process-button\",\n          children: loading ? '⏳ Processing...' : !ratesLoaded ? '⏳ Loading Rates...' : '🧮 Calculate Shipping Costs'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83D\\uDCCA Shipping Calculation Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportResults,\n            className: \"export-button\",\n            children: \"\\uD83D\\uDCE5 Export CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83D\\uDCC8 Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-stats\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Shipped Orders Processed:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-value\",\n                  children: results.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Total Shipping Cost:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-value\",\n                  children: [\"\\u20B9\", totalShippingCost.toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Average Cost per Order:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-value\",\n                  children: [\"\\u20B9\", Math.round(totalShippingCost / results.length)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 17\n            }, this), processingStats.totalOrders > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"processing-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"\\uD83D\\uDCCB Processing Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"processing-stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"processing-stat\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\uD83D\\uDCE6 Total Orders in File:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: processingStats.totalOrders\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"processing-stat\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\u2705 Shipped Orders:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: processingStats.shippedOrders\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 23\n                }, this), processingStats.filteredOut > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"processing-stat filtered\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\u23ED\\uFE0F Filtered Out (Non-Shipped):\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 430,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: processingStats.filteredOut\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 19\n            }, this), results.some(r => !r.stateFound) && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"warning-text\",\n              children: [\"\\u26A0\\uFE0F Some states used default rate (\\u20B9\", DEFAULT_RATE, \"/kg) - not found in rates file\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"results-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"S.No.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Order ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"State\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Pack of One\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Pack of Two\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Total Weight (kg)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Rounded Weight (kg)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Rate per kg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Shipping Cost\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: results.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: !row.stateFound ? 'warning-row' : '',\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"serial-number\",\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.orderId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [row.state, !row.stateFound && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"warning-badge\",\n                    children: \"\\u26A0\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 467,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.packOfOne\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.packOfTwo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.totalWeight\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.roundedWeight\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"\\u20B9\", row.ratePerKg]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"\\u20B9\", row.shippingCost]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Built for efficient e-commerce shipping cost calculation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"CICOG+BXm8+ugMSNeqbkulR17t4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","Papa","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","orderData","setOrderData","results","setResults","loading","setLoading","error","setError","uploadStatus","setUploadStatus","orders","processingStats","setProcessingStats","totalOrders","shippedOrders","filteredOut","fileInfo","setFileInfo","name","type","converted","shippingRates","setShippingRates","ratesLoaded","setRatesLoaded","DEFAULT_RATE","loadShippingRates","response","fetch","ok","Error","csvText","text","parse","header","skipEmptyLines","complete","rates","data","forEach","row","_row$State","state","State","trim","toUpperCase","rate","parseFloat","Rate_per_kg","isNaN","console","parseFile","file","callback","fileExtension","toLowerCase","split","pop","reader","FileReader","onload","e","target","result","lines","filter","line","length","csvContent","map","index","fields","field","includes","replace","join","csvBlob","Blob","errors","message","onerror","readAsText","handleOrderUpload","event","files","prev","extractPackInfo","productName","packOfOne","test","packOfTwo","processOrders","_row$orderStatus","orderStatus","stats","orderGroups","_row$amazonOrderId","_row$productName","_row$shipState","orderId","quantity","parseInt","items","packInfo","push","processedResults","Object","values","order","totalWeight","roundedWeight","Math","ceil","shippingCost","toFixed","ratePerKg","stateFound","err","exportResults","unparse","blob","link","document","createElement","href","URL","createObjectURL","download","click","totalShippingCost","reduce","sum","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","disabled","keys","onClick","toLocaleString","round","some","r","_c","$RefreshReg$"],"sources":["/Users/karthiksv/Development/ShipCal/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport './App.css';\n\nconst App = () => {\n  const [orderData, setOrderData] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [uploadStatus, setUploadStatus] = useState({\n    orders: false\n  });\n  const [processingStats, setProcessingStats] = useState({\n    totalOrders: 0,\n    shippedOrders: 0,\n    filteredOut: 0\n  });\n  const [fileInfo, setFileInfo] = useState({\n    name: '',\n    type: '',\n    converted: false\n  });\n  const [shippingRates, setShippingRates] = useState({});\n  const [ratesLoaded, setRatesLoaded] = useState(false);\n\n  const DEFAULT_RATE = 60; // Default rate per kg if state not found\n\n  // Load shipping rates from CSV file\n  const loadShippingRates = useCallback(async () => {\n    try {\n      const response = await fetch('/state_wise_shipping_rates.csv');\n      if (!response.ok) {\n        throw new Error('Failed to load shipping rates file');\n      }\n      const csvText = await response.text();\n      \n      Papa.parse(csvText, {\n        header: true,\n        skipEmptyLines: true,\n        complete: (results) => {\n          const rates = {};\n          results.data.forEach(row => {\n            const state = row.State?.trim().toUpperCase();\n            const rate = parseFloat(row.Rate_per_kg);\n            if (state && !isNaN(rate)) {\n              rates[state] = rate;\n            }\n          });\n          setShippingRates(rates);\n          setRatesLoaded(true);\n        },\n        error: (error) => {\n          console.error('Error parsing shipping rates:', error);\n          setRatesLoaded(true); // Allow app to continue with default rates\n        }\n      });\n    } catch (error) {\n      console.error('Error loading shipping rates:', error);\n      setRatesLoaded(true); // Allow app to continue with default rates\n    }\n  }, []);\n\n  // Load shipping rates on component mount\n  useEffect(() => {\n    loadShippingRates();\n  }, [loadShippingRates]);\n\n  // Parse CSV or TXT files\n  const parseFile = useCallback((file, callback) => {\n    const fileExtension = file.name.toLowerCase().split('.').pop();\n    \n    if (fileExtension === 'txt') {\n      // Handle TXT file - assume tab-delimited Amazon report format\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        try {\n          const text = e.target.result;\n          const lines = text.split('\\n').filter(line => line.trim());\n          \n          if (lines.length === 0) {\n            setError('TXT file appears to be empty');\n            return;\n          }\n          \n          // Convert tab-delimited to CSV format\n          const csvContent = lines.map((line, index) => {\n            // Split by tabs and wrap fields with commas in quotes\n            const fields = line.split('\\t');\n            \n            // Basic validation - ensure we have reasonable number of fields\n            if (index === 0 && fields.length < 5) {\n              throw new Error('TXT file doesn\\'t appear to be a valid Amazon order report (too few columns)');\n            }\n            \n            return fields.map(field => {\n              field = field.trim();\n              // If field contains comma, quote, or newline, quote it\n              if (field.includes(',') || field.includes('\"') || field.includes('\\n')) {\n                return `\"${field.replace(/\"/g, '\"\"')}\"`;\n              }\n              return field;\n            }).join(',');\n          }).join('\\n');\n          \n          // Create a blob and parse as CSV\n          const csvBlob = new Blob([csvContent], { type: 'text/csv' });\n          Papa.parse(csvBlob, {\n            header: true,\n            skipEmptyLines: true,\n            complete: (results) => {\n              if (results.errors.length > 0) {\n                setError(`TXT to CSV conversion error: ${results.errors[0].message}`);\n                return;\n              }\n              callback(results.data);\n            },\n            error: (error) => {\n              setError(`Failed to parse converted CSV: ${error.message}`);\n            }\n          });\n        } catch (error) {\n          setError(`TXT file processing error: ${error.message}`);\n        }\n      };\n      reader.onerror = () => setError('Failed to read TXT file');\n      reader.readAsText(file);\n    } else {\n      // Handle CSV file normally\n      Papa.parse(file, {\n        header: true,\n        skipEmptyLines: true,\n        complete: (results) => {\n          if (results.errors.length > 0) {\n            setError(`CSV parsing error: ${results.errors[0].message}`);\n            return;\n          }\n          callback(results.data);\n        },\n        error: (error) => {\n          setError(`Failed to parse CSV: ${error.message}`);\n        }\n      });\n    }\n  }, []);\n\n  // Handle order file upload\n  const handleOrderUpload = useCallback((event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const fileExtension = file.name.toLowerCase().split('.').pop();\n    if (!['txt', 'csv'].includes(fileExtension)) {\n      setError('Please upload a TXT or CSV file');\n      return;\n    }\n\n    setError('');\n    setLoading(true);\n\n    setFileInfo({\n      name: file.name,\n      type: fileExtension.toUpperCase(),\n      converted: fileExtension === 'txt'\n    });\n\n    parseFile(file, (data) => {\n      setOrderData(data);\n      setUploadStatus(prev => ({ ...prev, orders: true }));\n      setLoading(false);\n    });\n  }, [parseFile]);\n\n\n\n  // Extract pack information from product name\n  const extractPackInfo = (productName) => {\n    const packOfOne = /Pack of 1/i.test(productName) ? 1 : 0;\n    const packOfTwo = /Pack of 2/i.test(productName) ? 1 : 0;\n    return { packOfOne, packOfTwo };\n  };\n\n  // Process orders and calculate shipping\n  const processOrders = useCallback(() => {\n    if (!orderData.length) {\n      setError('Please upload the Amazon order report CSV file');\n      return;\n    }\n\n    if (!ratesLoaded) {\n      setError('Shipping rates are still loading. Please wait...');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    try {\n\n      // Filter for shipped orders only\n      const shippedOrders = orderData.filter(row => {\n        const orderStatus = row['order-status']?.trim().toLowerCase();\n        return orderStatus === 'shipped';\n      });\n\n      // Update processing statistics\n      const stats = {\n        totalOrders: orderData.length,\n        shippedOrders: shippedOrders.length,\n        filteredOut: orderData.length - shippedOrders.length\n      };\n      setProcessingStats(stats);\n\n      // Group orders by Order ID\n      const orderGroups = {};\n      shippedOrders.forEach(row => {\n        const orderId = row['amazon-order-id']?.trim();\n        const productName = row['product-name']?.trim();\n        const quantity = parseInt(row.quantity) || 1;\n        const state = row['ship-state']?.trim().toUpperCase();\n\n        if (!orderId || !productName) return;\n\n        if (!orderGroups[orderId]) {\n          orderGroups[orderId] = {\n            orderId,\n            state,\n            packOfOne: 0,\n            packOfTwo: 0,\n            items: []\n          };\n        }\n\n        const packInfo = extractPackInfo(productName);\n        orderGroups[orderId].packOfOne += packInfo.packOfOne * quantity;\n        orderGroups[orderId].packOfTwo += packInfo.packOfTwo * quantity;\n        orderGroups[orderId].items.push({ productName, quantity, ...packInfo });\n      });\n\n      // Calculate shipping for each order\n      const processedResults = Object.values(orderGroups).map(order => {\n        const totalWeight = (order.packOfOne * 0.5) + (order.packOfTwo * 1.0);\n        const roundedWeight = Math.ceil(totalWeight);\n        const rate = shippingRates[order.state] || DEFAULT_RATE;\n        const shippingCost = roundedWeight * rate;\n\n        return {\n          orderId: order.orderId,\n          state: order.state,\n          packOfOne: order.packOfOne,\n          packOfTwo: order.packOfTwo,\n          totalWeight: totalWeight.toFixed(2),\n          roundedWeight,\n          ratePerKg: rate,\n          shippingCost,\n          stateFound: !!shippingRates[order.state]\n        };\n      });\n\n      setResults(processedResults);\n      setLoading(false);\n    } catch (err) {\n      setError(`Processing error: ${err.message}`);\n      setLoading(false);\n    }\n  }, [orderData, shippingRates, ratesLoaded]);\n\n  // Export results to CSV\n  const exportResults = useCallback(() => {\n    if (!results.length) return;\n\n    const csvContent = Papa.unparse({\n      fields: [\n        'S.No.',\n        'Order ID',\n        'State',\n        'Pack of One',\n        'Pack of Two',\n        'Total Weight (kg)',\n        'Rounded Weight (kg)',\n        'Rate per kg',\n        'Shipping Cost'\n      ],\n      data: results.map((row, index) => [\n        index + 1,\n        row.orderId,\n        row.state,\n        row.packOfOne,\n        row.packOfTwo,\n        row.totalWeight,\n        row.roundedWeight,\n        row.ratePerKg,\n        row.shippingCost\n      ])\n    });\n\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = 'shipping_calculation_results.csv';\n    link.click();\n  }, [results]);\n\n  // Calculate total shipping cost\n  const totalShippingCost = results.reduce((sum, order) => sum + order.shippingCost, 0);\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <header className=\"header\">\n          <h1>🚚 Amazon Order Shipping Calculator</h1>\n          <p>Upload your Amazon order report (TXT or CSV) to calculate shipping costs with built-in state-wise rates</p>\n        </header>\n\n        {error && (\n          <div className=\"error-message\">\n            <span>⚠️ {error}</span>\n          </div>\n        )}\n\n        <div className=\"upload-section\">\n          <div className=\"upload-card\">\n            <h3>📋 Amazon Order Report</h3>\n            <div className=\"file-input-info\">\n              <p>Upload TXT or CSV format</p>\n            </div>\n            <input\n              type=\"file\"\n              accept=\".txt,.csv\"\n              onChange={handleOrderUpload}\n              disabled={loading}\n              className=\"file-input\"\n            />\n            <div className={`status ${uploadStatus.orders ? 'success' : 'pending'}`}>\n              {uploadStatus.orders ? '✅ Uploaded' : '⏳ Pending'}\n            </div>\n            {orderData.length > 0 && (\n              <div className=\"file-details\">\n                <p className=\"file-info\">{orderData.length} orders loaded</p>\n                <div className=\"file-meta\">\n                  <span className=\"file-name\">📄 {fileInfo.name}</span>\n                  {fileInfo.converted && (\n                    <span className=\"conversion-badge\">🔄 TXT → CSV Converted</span>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"rates-info-card\">\n            <h3>💰 State-wise Shipping Rates</h3>\n            <div className={`status ${ratesLoaded ? 'success' : 'pending'}`}>\n              {ratesLoaded ? '✅ Rates Loaded from CSV' : '⏳ Loading Rates...'}\n            </div>\n            {ratesLoaded && (\n              <>\n                <p className=\"file-info\">{Object.keys(shippingRates).length} states configured</p>\n                <div className=\"rates-preview\">\n                  <p><strong>Sample rates:</strong></p>\n                  <div className=\"rates-examples\">\n                    <span>Karnataka: ₹{shippingRates['KARNATAKA'] || DEFAULT_RATE}/kg</span>\n                    <span>Tamil Nadu: ₹{shippingRates['TAMIL NADU'] || DEFAULT_RATE}/kg</span>\n                    <span>Maharashtra: ₹{shippingRates['MAHARASHTRA'] || DEFAULT_RATE}/kg</span>\n                  </div>\n                  <button \n                    onClick={loadShippingRates}\n                    className=\"refresh-rates-btn\"\n                    disabled={loading}\n                  >\n                    🔄 Refresh Rates\n                  </button>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n\n        <div className=\"action-section\">\n          <button\n            onClick={processOrders}\n            disabled={!uploadStatus.orders || !ratesLoaded || loading}\n            className=\"process-button\"\n          >\n            {loading ? '⏳ Processing...' : \n             !ratesLoaded ? '⏳ Loading Rates...' : \n             '🧮 Calculate Shipping Costs'}\n          </button>\n        </div>\n\n        {results.length > 0 && (\n          <div className=\"results-section\">\n            <div className=\"results-header\">\n              <h2>📊 Shipping Calculation Results</h2>\n              <button onClick={exportResults} className=\"export-button\">\n                📥 Export CSV\n              </button>\n            </div>\n\n            <div className=\"summary\">\n              <div className=\"summary-card\">\n                <h3>📈 Summary</h3>\n                <div className=\"summary-stats\">\n                  <div className=\"stat\">\n                    <span className=\"stat-label\">Shipped Orders Processed:</span>\n                    <span className=\"stat-value\">{results.length}</span>\n                  </div>\n                  <div className=\"stat\">\n                    <span className=\"stat-label\">Total Shipping Cost:</span>\n                    <span className=\"stat-value\">₹{totalShippingCost.toLocaleString()}</span>\n                  </div>\n                  <div className=\"stat\">\n                    <span className=\"stat-label\">Average Cost per Order:</span>\n                    <span className=\"stat-value\">₹{Math.round(totalShippingCost / results.length)}</span>\n                  </div>\n                </div>\n\n                {processingStats.totalOrders > 0 && (\n                  <div className=\"processing-info\">\n                    <h4>📋 Processing Details</h4>\n                    <div className=\"processing-stats\">\n                      <div className=\"processing-stat\">\n                        <span>📦 Total Orders in File:</span>\n                        <span>{processingStats.totalOrders}</span>\n                      </div>\n                      <div className=\"processing-stat\">\n                        <span>✅ Shipped Orders:</span>\n                        <span>{processingStats.shippedOrders}</span>\n                      </div>\n                      {processingStats.filteredOut > 0 && (\n                        <div className=\"processing-stat filtered\">\n                          <span>⏭️ Filtered Out (Non-Shipped):</span>\n                          <span>{processingStats.filteredOut}</span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n                {results.some(r => !r.stateFound) && (\n                  <p className=\"warning-text\">\n                    ⚠️ Some states used default rate (₹{DEFAULT_RATE}/kg) - not found in rates file\n                  </p>\n                )}\n              </div>\n            </div>\n\n            <div className=\"table-container\">\n              <table className=\"results-table\">\n                <thead>\n                  <tr>\n                    <th>S.No.</th>\n                    <th>Order ID</th>\n                    <th>State</th>\n                    <th>Pack of One</th>\n                    <th>Pack of Two</th>\n                    <th>Total Weight (kg)</th>\n                    <th>Rounded Weight (kg)</th>\n                    <th>Rate per kg</th>\n                    <th>Shipping Cost</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {results.map((row, index) => (\n                    <tr key={index} className={!row.stateFound ? 'warning-row' : ''}>\n                      <td className=\"serial-number\">{index + 1}</td>\n                      <td>{row.orderId}</td>\n                      <td>\n                        {row.state}\n                        {!row.stateFound && <span className=\"warning-badge\">⚠️</span>}\n                      </td>\n                      <td>{row.packOfOne}</td>\n                      <td>{row.packOfTwo}</td>\n                      <td>{row.totalWeight}</td>\n                      <td>{row.roundedWeight}</td>\n                      <td>₹{row.ratePerKg}</td>\n                      <td>₹{row.shippingCost}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n\n        <footer className=\"footer\">\n          <p>Built for efficient e-commerce shipping cost calculation</p>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}