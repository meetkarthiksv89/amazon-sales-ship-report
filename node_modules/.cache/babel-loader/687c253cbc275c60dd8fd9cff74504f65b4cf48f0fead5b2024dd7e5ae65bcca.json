{"ast":null,"code":"var _jsxFileName = \"/Users/karthiksv/Development/ShipCal/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [orderData, setOrderData] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [uploadStatus, setUploadStatus] = useState({\n    orders: false\n  });\n  const [fileInfo, setFileInfo] = useState({\n    name: '',\n    type: '',\n    converted: false\n  });\n  const [shippingRates, setShippingRates] = useState({});\n  const [ratesLoaded, setRatesLoaded] = useState(false);\n  const DEFAULT_RATE = 60; // Default rate per kg if state not found\n\n  // Load shipping rates from CSV file\n  const loadShippingRates = useCallback(async () => {\n    try {\n      const response = await fetch('/state_wise_shipping_rates.csv');\n      if (!response.ok) {\n        throw new Error('Failed to load shipping rates file');\n      }\n      const csvText = await response.text();\n      Papa.parse(csvText, {\n        header: true,\n        skipEmptyLines: true,\n        complete: results => {\n          const rates = {};\n          results.data.forEach(row => {\n            var _row$State;\n            const state = (_row$State = row.State) === null || _row$State === void 0 ? void 0 : _row$State.trim().toUpperCase();\n            const rate = parseFloat(row.Rate_per_kg);\n            if (state && !isNaN(rate)) {\n              rates[state] = rate;\n            }\n          });\n          setShippingRates(rates);\n          setRatesLoaded(true);\n        },\n        error: error => {\n          console.error('Error parsing shipping rates:', error);\n          setRatesLoaded(true); // Allow app to continue with default rates\n        }\n      });\n    } catch (error) {\n      console.error('Error loading shipping rates:', error);\n      setRatesLoaded(true); // Allow app to continue with default rates\n    }\n  }, []);\n\n  // Load shipping rates on component mount\n  useEffect(() => {\n    loadShippingRates();\n  }, [loadShippingRates]);\n\n  // Parse CSV or TXT files\n  const parseFile = useCallback((file, callback) => {\n    const fileExtension = file.name.toLowerCase().split('.').pop();\n    if (fileExtension === 'txt') {\n      // Handle TXT file - assume tab-delimited Amazon report format\n      const reader = new FileReader();\n      reader.onload = e => {\n        try {\n          const text = e.target.result;\n          const lines = text.split('\\n').filter(line => line.trim());\n          if (lines.length === 0) {\n            setError('TXT file appears to be empty');\n            return;\n          }\n\n          // Convert tab-delimited to CSV format\n          const csvContent = lines.map((line, index) => {\n            // Split by tabs and wrap fields with commas in quotes\n            const fields = line.split('\\t');\n\n            // Basic validation - ensure we have reasonable number of fields\n            if (index === 0 && fields.length < 5) {\n              throw new Error('TXT file doesn\\'t appear to be a valid Amazon order report (too few columns)');\n            }\n            return fields.map(field => {\n              field = field.trim();\n              // If field contains comma, quote, or newline, quote it\n              if (field.includes(',') || field.includes('\"') || field.includes('\\n')) {\n                return `\"${field.replace(/\"/g, '\"\"')}\"`;\n              }\n              return field;\n            }).join(',');\n          }).join('\\n');\n\n          // Create a blob and parse as CSV\n          const csvBlob = new Blob([csvContent], {\n            type: 'text/csv'\n          });\n          Papa.parse(csvBlob, {\n            header: true,\n            skipEmptyLines: true,\n            complete: results => {\n              if (results.errors.length > 0) {\n                setError(`TXT to CSV conversion error: ${results.errors[0].message}`);\n                return;\n              }\n              callback(results.data);\n            },\n            error: error => {\n              setError(`Failed to parse converted CSV: ${error.message}`);\n            }\n          });\n        } catch (error) {\n          setError(`TXT file processing error: ${error.message}`);\n        }\n      };\n      reader.onerror = () => setError('Failed to read TXT file');\n      reader.readAsText(file);\n    } else {\n      // Handle CSV file normally\n      Papa.parse(file, {\n        header: true,\n        skipEmptyLines: true,\n        complete: results => {\n          if (results.errors.length > 0) {\n            setError(`CSV parsing error: ${results.errors[0].message}`);\n            return;\n          }\n          callback(results.data);\n        },\n        error: error => {\n          setError(`Failed to parse CSV: ${error.message}`);\n        }\n      });\n    }\n  }, []);\n\n  // Handle order file upload\n  const handleOrderUpload = useCallback(event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const fileExtension = file.name.toLowerCase().split('.').pop();\n    if (!['txt', 'csv'].includes(fileExtension)) {\n      setError('Please upload a TXT or CSV file');\n      return;\n    }\n    setError('');\n    setLoading(true);\n    setFileInfo({\n      name: file.name,\n      type: fileExtension.toUpperCase(),\n      converted: fileExtension === 'txt'\n    });\n    parseFile(file, data => {\n      setOrderData(data);\n      setUploadStatus(prev => ({\n        ...prev,\n        orders: true\n      }));\n      setLoading(false);\n    });\n  }, [parseFile]);\n\n  // Extract pack information from product name\n  const extractPackInfo = productName => {\n    const packOfOne = /Pack of 1/i.test(productName) ? 1 : 0;\n    const packOfTwo = /Pack of 2/i.test(productName) ? 1 : 0;\n    return {\n      packOfOne,\n      packOfTwo\n    };\n  };\n\n  // Process orders and calculate shipping\n  const processOrders = useCallback(() => {\n    if (!orderData.length) {\n      setError('Please upload the Amazon order report CSV file');\n      return;\n    }\n    if (!ratesLoaded) {\n      setError('Shipping rates are still loading. Please wait...');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      // Filter for shipped orders only\n      const shippedOrders = orderData.filter(row => {\n        var _row$orderStatus;\n        const orderStatus = (_row$orderStatus = row['order-status']) === null || _row$orderStatus === void 0 ? void 0 : _row$orderStatus.trim().toLowerCase();\n        return orderStatus === 'shipped';\n      });\n\n      // Group orders by Order ID\n      const orderGroups = {};\n      shippedOrders.forEach(row => {\n        var _row$amazonOrderId, _row$productName, _row$shipState;\n        const orderId = (_row$amazonOrderId = row['amazon-order-id']) === null || _row$amazonOrderId === void 0 ? void 0 : _row$amazonOrderId.trim();\n        const productName = (_row$productName = row['product-name']) === null || _row$productName === void 0 ? void 0 : _row$productName.trim();\n        const quantity = parseInt(row.quantity) || 1;\n        const state = (_row$shipState = row['ship-state']) === null || _row$shipState === void 0 ? void 0 : _row$shipState.trim().toUpperCase();\n        if (!orderId || !productName) return;\n        if (!orderGroups[orderId]) {\n          orderGroups[orderId] = {\n            orderId,\n            state,\n            packOfOne: 0,\n            packOfTwo: 0,\n            items: []\n          };\n        }\n        const packInfo = extractPackInfo(productName);\n        orderGroups[orderId].packOfOne += packInfo.packOfOne * quantity;\n        orderGroups[orderId].packOfTwo += packInfo.packOfTwo * quantity;\n        orderGroups[orderId].items.push({\n          productName,\n          quantity,\n          ...packInfo\n        });\n      });\n\n      // Calculate shipping for each order\n      const processedResults = Object.values(orderGroups).map(order => {\n        const totalWeight = order.packOfOne * 0.5 + order.packOfTwo * 1.0;\n        const roundedWeight = Math.ceil(totalWeight);\n        const rate = shippingRates[order.state] || DEFAULT_RATE;\n        const shippingCost = roundedWeight * rate;\n        return {\n          orderId: order.orderId,\n          state: order.state,\n          packOfOne: order.packOfOne,\n          packOfTwo: order.packOfTwo,\n          totalWeight: totalWeight.toFixed(2),\n          roundedWeight,\n          ratePerKg: rate,\n          shippingCost,\n          stateFound: !!shippingRates[order.state]\n        };\n      });\n      setResults(processedResults);\n      setLoading(false);\n    } catch (err) {\n      setError(`Processing error: ${err.message}`);\n      setLoading(false);\n    }\n  }, [orderData, shippingRates, ratesLoaded]);\n\n  // Export results to CSV\n  const exportResults = useCallback(() => {\n    if (!results.length) return;\n    const csvContent = Papa.unparse({\n      fields: ['S.No.', 'Order ID', 'State', 'Pack of One', 'Pack of Two', 'Total Weight (kg)', 'Rounded Weight (kg)', 'Rate per kg', 'Shipping Cost'],\n      data: results.map((row, index) => [index + 1, row.orderId, row.state, row.packOfOne, row.packOfTwo, row.totalWeight, row.roundedWeight, row.ratePerKg, row.shippingCost])\n    });\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = 'shipping_calculation_results.csv';\n    link.click();\n  }, [results]);\n\n  // Calculate total shipping cost\n  const totalShippingCost = results.reduce((sum, order) => sum + order.shippingCost, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83D\\uDE9A Amazon Order Shipping Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload your Amazon order report (TXT or CSV) to calculate shipping costs with built-in state-wise rates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u26A0\\uFE0F \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-area\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-icon\",\n                children: \"\\uD83D\\uDCC1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Upload Order Report\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Drop your Amazon order file here or click to browse\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"supported-formats\",\n                  children: \"Supports TXT & CSV formats\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".txt,.csv\",\n              onChange: handleOrderUpload,\n              disabled: loading,\n              className: \"file-input-hidden\",\n              id: \"file-upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"file-upload\",\n              className: \"file-upload-label\",\n              children: \"Choose File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), uploadStatus.orders && orderData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-success\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"success-indicator\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"success-icon\",\n                  children: \"\\u2705\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"success-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [orderData.length, \" orders loaded\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"file-details\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"file-name\",\n                      children: fileInfo.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 25\n                    }, this), fileInfo.converted && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"conversion-tag\",\n                      children: \"TXT\\u2192CSV\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rates-status\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rates-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rates-icon\",\n                children: \"\\u2699\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rates-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"rates-title\",\n                  children: \"Shipping Rates\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `rates-status-text ${ratesLoaded ? 'loaded' : 'loading'}`,\n                  children: ratesLoaded ? `${Object.keys(shippingRates).length} states configured` : 'Loading...'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 19\n                }, this), ratesLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"rates-sample\",\n                  children: [\"KA: \\u20B9\", shippingRates['KARNATAKA'] || DEFAULT_RATE, \" \\u2022 TN: \\u20B9\", shippingRates['TAMIL NADU'] || DEFAULT_RATE, \" \\u2022 MH: \\u20B9\", shippingRates['MAHARASHTRA'] || DEFAULT_RATE]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this), ratesLoaded && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: loadShippingRates,\n                className: \"refresh-btn\",\n                disabled: loading,\n                title: \"Refresh rates from CSV\",\n                children: \"\\uD83D\\uDD04\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-section\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: processOrders,\n          disabled: !uploadStatus.orders || !ratesLoaded || loading,\n          className: \"process-button\",\n          children: loading ? '⏳ Processing...' : !ratesLoaded ? '⏳ Loading Rates...' : '🧮 Calculate Shipping Costs'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83D\\uDCCA Shipping Calculation Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportResults,\n            className: \"export-button\",\n            children: \"\\uD83D\\uDCE5 Export CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-card-modern orders-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-icon\",\n                children: \"\\uD83D\\uDCE6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-value\",\n                  children: results.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-label\",\n                  children: \"Orders Processed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-card-modern cost-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-icon\",\n                children: \"\\uD83D\\uDCB0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-value\",\n                  children: [\"\\u20B9\", totalShippingCost.toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-label\",\n                  children: \"Total Shipping Cost\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-card-modern average-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-icon\",\n                children: \"\\uD83D\\uDCCA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-value\",\n                  children: [\"\\u20B9\", Math.round(totalShippingCost / results.length)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-label\",\n                  children: \"Average per Order\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this), results.some(r => !r.stateFound) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"warning-banner\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"warning-icon\",\n              children: \"\\u26A0\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"warning-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Notice:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 21\n              }, this), \" Some states used default rate (\\u20B9\", DEFAULT_RATE, \"/kg) - not found in rates file\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"results-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"S.No.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Order ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"State\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Pack of One\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Pack of Two\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Total Weight (kg)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Rounded Weight (kg)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Rate per kg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Shipping Cost\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: results.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: !row.stateFound ? 'warning-row' : '',\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"serial-number\",\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.orderId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [row.state, !row.stateFound && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"warning-badge\",\n                    children: \"\\u26A0\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.packOfOne\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.packOfTwo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.totalWeight\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.roundedWeight\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"\\u20B9\", row.ratePerKg]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"\\u20B9\", row.shippingCost]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Built for efficient e-commerce shipping cost calculation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"AYzFhh8ymK/ryGzy9cpYULK1HEY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","Papa","jsxDEV","_jsxDEV","App","_s","orderData","setOrderData","results","setResults","loading","setLoading","error","setError","uploadStatus","setUploadStatus","orders","fileInfo","setFileInfo","name","type","converted","shippingRates","setShippingRates","ratesLoaded","setRatesLoaded","DEFAULT_RATE","loadShippingRates","response","fetch","ok","Error","csvText","text","parse","header","skipEmptyLines","complete","rates","data","forEach","row","_row$State","state","State","trim","toUpperCase","rate","parseFloat","Rate_per_kg","isNaN","console","parseFile","file","callback","fileExtension","toLowerCase","split","pop","reader","FileReader","onload","e","target","result","lines","filter","line","length","csvContent","map","index","fields","field","includes","replace","join","csvBlob","Blob","errors","message","onerror","readAsText","handleOrderUpload","event","files","prev","extractPackInfo","productName","packOfOne","test","packOfTwo","processOrders","shippedOrders","_row$orderStatus","orderStatus","orderGroups","_row$amazonOrderId","_row$productName","_row$shipState","orderId","quantity","parseInt","items","packInfo","push","processedResults","Object","values","order","totalWeight","roundedWeight","Math","ceil","shippingCost","toFixed","ratePerKg","stateFound","err","exportResults","unparse","blob","link","document","createElement","href","URL","createObjectURL","download","click","totalShippingCost","reduce","sum","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","disabled","id","htmlFor","keys","onClick","title","toLocaleString","round","some","r","_c","$RefreshReg$"],"sources":["/Users/karthiksv/Development/ShipCal/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport './App.css';\n\nconst App = () => {\n  const [orderData, setOrderData] = useState([]);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [uploadStatus, setUploadStatus] = useState({\n    orders: false\n  });\n\n  const [fileInfo, setFileInfo] = useState({\n    name: '',\n    type: '',\n    converted: false\n  });\n  const [shippingRates, setShippingRates] = useState({});\n  const [ratesLoaded, setRatesLoaded] = useState(false);\n\n  const DEFAULT_RATE = 60; // Default rate per kg if state not found\n\n  // Load shipping rates from CSV file\n  const loadShippingRates = useCallback(async () => {\n    try {\n      const response = await fetch('/state_wise_shipping_rates.csv');\n      if (!response.ok) {\n        throw new Error('Failed to load shipping rates file');\n      }\n      const csvText = await response.text();\n      \n      Papa.parse(csvText, {\n        header: true,\n        skipEmptyLines: true,\n        complete: (results) => {\n          const rates = {};\n          results.data.forEach(row => {\n            const state = row.State?.trim().toUpperCase();\n            const rate = parseFloat(row.Rate_per_kg);\n            if (state && !isNaN(rate)) {\n              rates[state] = rate;\n            }\n          });\n          setShippingRates(rates);\n          setRatesLoaded(true);\n        },\n        error: (error) => {\n          console.error('Error parsing shipping rates:', error);\n          setRatesLoaded(true); // Allow app to continue with default rates\n        }\n      });\n    } catch (error) {\n      console.error('Error loading shipping rates:', error);\n      setRatesLoaded(true); // Allow app to continue with default rates\n    }\n  }, []);\n\n  // Load shipping rates on component mount\n  useEffect(() => {\n    loadShippingRates();\n  }, [loadShippingRates]);\n\n  // Parse CSV or TXT files\n  const parseFile = useCallback((file, callback) => {\n    const fileExtension = file.name.toLowerCase().split('.').pop();\n    \n    if (fileExtension === 'txt') {\n      // Handle TXT file - assume tab-delimited Amazon report format\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        try {\n          const text = e.target.result;\n          const lines = text.split('\\n').filter(line => line.trim());\n          \n          if (lines.length === 0) {\n            setError('TXT file appears to be empty');\n            return;\n          }\n          \n          // Convert tab-delimited to CSV format\n          const csvContent = lines.map((line, index) => {\n            // Split by tabs and wrap fields with commas in quotes\n            const fields = line.split('\\t');\n            \n            // Basic validation - ensure we have reasonable number of fields\n            if (index === 0 && fields.length < 5) {\n              throw new Error('TXT file doesn\\'t appear to be a valid Amazon order report (too few columns)');\n            }\n            \n            return fields.map(field => {\n              field = field.trim();\n              // If field contains comma, quote, or newline, quote it\n              if (field.includes(',') || field.includes('\"') || field.includes('\\n')) {\n                return `\"${field.replace(/\"/g, '\"\"')}\"`;\n              }\n              return field;\n            }).join(',');\n          }).join('\\n');\n          \n          // Create a blob and parse as CSV\n          const csvBlob = new Blob([csvContent], { type: 'text/csv' });\n          Papa.parse(csvBlob, {\n            header: true,\n            skipEmptyLines: true,\n            complete: (results) => {\n              if (results.errors.length > 0) {\n                setError(`TXT to CSV conversion error: ${results.errors[0].message}`);\n                return;\n              }\n              callback(results.data);\n            },\n            error: (error) => {\n              setError(`Failed to parse converted CSV: ${error.message}`);\n            }\n          });\n        } catch (error) {\n          setError(`TXT file processing error: ${error.message}`);\n        }\n      };\n      reader.onerror = () => setError('Failed to read TXT file');\n      reader.readAsText(file);\n    } else {\n      // Handle CSV file normally\n      Papa.parse(file, {\n        header: true,\n        skipEmptyLines: true,\n        complete: (results) => {\n          if (results.errors.length > 0) {\n            setError(`CSV parsing error: ${results.errors[0].message}`);\n            return;\n          }\n          callback(results.data);\n        },\n        error: (error) => {\n          setError(`Failed to parse CSV: ${error.message}`);\n        }\n      });\n    }\n  }, []);\n\n  // Handle order file upload\n  const handleOrderUpload = useCallback((event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const fileExtension = file.name.toLowerCase().split('.').pop();\n    if (!['txt', 'csv'].includes(fileExtension)) {\n      setError('Please upload a TXT or CSV file');\n      return;\n    }\n\n    setError('');\n    setLoading(true);\n\n    setFileInfo({\n      name: file.name,\n      type: fileExtension.toUpperCase(),\n      converted: fileExtension === 'txt'\n    });\n\n    parseFile(file, (data) => {\n      setOrderData(data);\n      setUploadStatus(prev => ({ ...prev, orders: true }));\n      setLoading(false);\n    });\n  }, [parseFile]);\n\n\n\n  // Extract pack information from product name\n  const extractPackInfo = (productName) => {\n    const packOfOne = /Pack of 1/i.test(productName) ? 1 : 0;\n    const packOfTwo = /Pack of 2/i.test(productName) ? 1 : 0;\n    return { packOfOne, packOfTwo };\n  };\n\n  // Process orders and calculate shipping\n  const processOrders = useCallback(() => {\n    if (!orderData.length) {\n      setError('Please upload the Amazon order report CSV file');\n      return;\n    }\n\n    if (!ratesLoaded) {\n      setError('Shipping rates are still loading. Please wait...');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    try {\n\n      // Filter for shipped orders only\n      const shippedOrders = orderData.filter(row => {\n        const orderStatus = row['order-status']?.trim().toLowerCase();\n        return orderStatus === 'shipped';\n      });\n\n\n\n      // Group orders by Order ID\n      const orderGroups = {};\n      shippedOrders.forEach(row => {\n        const orderId = row['amazon-order-id']?.trim();\n        const productName = row['product-name']?.trim();\n        const quantity = parseInt(row.quantity) || 1;\n        const state = row['ship-state']?.trim().toUpperCase();\n\n        if (!orderId || !productName) return;\n\n        if (!orderGroups[orderId]) {\n          orderGroups[orderId] = {\n            orderId,\n            state,\n            packOfOne: 0,\n            packOfTwo: 0,\n            items: []\n          };\n        }\n\n        const packInfo = extractPackInfo(productName);\n        orderGroups[orderId].packOfOne += packInfo.packOfOne * quantity;\n        orderGroups[orderId].packOfTwo += packInfo.packOfTwo * quantity;\n        orderGroups[orderId].items.push({ productName, quantity, ...packInfo });\n      });\n\n      // Calculate shipping for each order\n      const processedResults = Object.values(orderGroups).map(order => {\n        const totalWeight = (order.packOfOne * 0.5) + (order.packOfTwo * 1.0);\n        const roundedWeight = Math.ceil(totalWeight);\n        const rate = shippingRates[order.state] || DEFAULT_RATE;\n        const shippingCost = roundedWeight * rate;\n\n        return {\n          orderId: order.orderId,\n          state: order.state,\n          packOfOne: order.packOfOne,\n          packOfTwo: order.packOfTwo,\n          totalWeight: totalWeight.toFixed(2),\n          roundedWeight,\n          ratePerKg: rate,\n          shippingCost,\n          stateFound: !!shippingRates[order.state]\n        };\n      });\n\n      setResults(processedResults);\n      setLoading(false);\n    } catch (err) {\n      setError(`Processing error: ${err.message}`);\n      setLoading(false);\n    }\n  }, [orderData, shippingRates, ratesLoaded]);\n\n  // Export results to CSV\n  const exportResults = useCallback(() => {\n    if (!results.length) return;\n\n    const csvContent = Papa.unparse({\n      fields: [\n        'S.No.',\n        'Order ID',\n        'State',\n        'Pack of One',\n        'Pack of Two',\n        'Total Weight (kg)',\n        'Rounded Weight (kg)',\n        'Rate per kg',\n        'Shipping Cost'\n      ],\n      data: results.map((row, index) => [\n        index + 1,\n        row.orderId,\n        row.state,\n        row.packOfOne,\n        row.packOfTwo,\n        row.totalWeight,\n        row.roundedWeight,\n        row.ratePerKg,\n        row.shippingCost\n      ])\n    });\n\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = 'shipping_calculation_results.csv';\n    link.click();\n  }, [results]);\n\n  // Calculate total shipping cost\n  const totalShippingCost = results.reduce((sum, order) => sum + order.shippingCost, 0);\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <header className=\"header\">\n          <h1>🚚 Amazon Order Shipping Calculator</h1>\n          <p>Upload your Amazon order report (TXT or CSV) to calculate shipping costs with built-in state-wise rates</p>\n        </header>\n\n        {error && (\n          <div className=\"error-message\">\n            <span>⚠️ {error}</span>\n          </div>\n        )}\n\n        <div className=\"upload-section\">\n          <div className=\"upload-container\">\n            <div className=\"upload-area\">\n              <div className=\"upload-header\">\n                <div className=\"upload-icon\">📁</div>\n                <div className=\"upload-text\">\n                  <h3>Upload Order Report</h3>\n                  <p>Drop your Amazon order file here or click to browse</p>\n                  <span className=\"supported-formats\">Supports TXT & CSV formats</span>\n                </div>\n              </div>\n              \n              <input\n                type=\"file\"\n                accept=\".txt,.csv\"\n                onChange={handleOrderUpload}\n                disabled={loading}\n                className=\"file-input-hidden\"\n                id=\"file-upload\"\n              />\n              <label htmlFor=\"file-upload\" className=\"file-upload-label\">\n                Choose File\n              </label>\n\n              {uploadStatus.orders && orderData.length > 0 && (\n                <div className=\"upload-success\">\n                  <div className=\"success-indicator\">\n                    <span className=\"success-icon\">✅</span>\n                    <div className=\"success-details\">\n                      <strong>{orderData.length} orders loaded</strong>\n                      <div className=\"file-details\">\n                        <span className=\"file-name\">{fileInfo.name}</span>\n                        {fileInfo.converted && (\n                          <span className=\"conversion-tag\">TXT→CSV</span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            <div className=\"rates-status\">\n              <div className=\"rates-indicator\">\n                <div className=\"rates-icon\">⚙️</div>\n                <div className=\"rates-info\">\n                  <div className=\"rates-title\">Shipping Rates</div>\n                  <div className={`rates-status-text ${ratesLoaded ? 'loaded' : 'loading'}`}>\n                    {ratesLoaded ? `${Object.keys(shippingRates).length} states configured` : 'Loading...'}\n                  </div>\n                  {ratesLoaded && (\n                    <div className=\"rates-sample\">\n                      KA: ₹{shippingRates['KARNATAKA'] || DEFAULT_RATE} • TN: ₹{shippingRates['TAMIL NADU'] || DEFAULT_RATE} • MH: ₹{shippingRates['MAHARASHTRA'] || DEFAULT_RATE}\n                    </div>\n                  )}\n                </div>\n                {ratesLoaded && (\n                  <button \n                    onClick={loadShippingRates}\n                    className=\"refresh-btn\"\n                    disabled={loading}\n                    title=\"Refresh rates from CSV\"\n                  >\n                    🔄\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"action-section\">\n          <button\n            onClick={processOrders}\n            disabled={!uploadStatus.orders || !ratesLoaded || loading}\n            className=\"process-button\"\n          >\n            {loading ? '⏳ Processing...' : \n             !ratesLoaded ? '⏳ Loading Rates...' : \n             '🧮 Calculate Shipping Costs'}\n          </button>\n        </div>\n\n        {results.length > 0 && (\n          <div className=\"results-section\">\n            <div className=\"results-header\">\n              <h2>📊 Shipping Calculation Results</h2>\n              <button onClick={exportResults} className=\"export-button\">\n                📥 Export CSV\n              </button>\n            </div>\n\n            <div className=\"summary\">\n              <div className=\"summary-grid\">\n                <div className=\"summary-card-modern orders-card\">\n                  <div className=\"card-icon\">📦</div>\n                  <div className=\"card-content\">\n                    <div className=\"card-value\">{results.length}</div>\n                    <div className=\"card-label\">Orders Processed</div>\n                  </div>\n                </div>\n                \n                <div className=\"summary-card-modern cost-card\">\n                  <div className=\"card-icon\">💰</div>\n                  <div className=\"card-content\">\n                    <div className=\"card-value\">₹{totalShippingCost.toLocaleString()}</div>\n                    <div className=\"card-label\">Total Shipping Cost</div>\n                  </div>\n                </div>\n                \n                <div className=\"summary-card-modern average-card\">\n                  <div className=\"card-icon\">📊</div>\n                  <div className=\"card-content\">\n                    <div className=\"card-value\">₹{Math.round(totalShippingCost / results.length)}</div>\n                    <div className=\"card-label\">Average per Order</div>\n                  </div>\n                </div>\n              </div>\n              \n              {results.some(r => !r.stateFound) && (\n                <div className=\"warning-banner\">\n                  <div className=\"warning-icon\">⚠️</div>\n                  <div className=\"warning-content\">\n                    <strong>Notice:</strong> Some states used default rate (₹{DEFAULT_RATE}/kg) - not found in rates file\n                  </div>\n                </div>\n              )}\n            </div>\n\n            <div className=\"table-container\">\n              <table className=\"results-table\">\n                <thead>\n                  <tr>\n                    <th>S.No.</th>\n                    <th>Order ID</th>\n                    <th>State</th>\n                    <th>Pack of One</th>\n                    <th>Pack of Two</th>\n                    <th>Total Weight (kg)</th>\n                    <th>Rounded Weight (kg)</th>\n                    <th>Rate per kg</th>\n                    <th>Shipping Cost</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {results.map((row, index) => (\n                    <tr key={index} className={!row.stateFound ? 'warning-row' : ''}>\n                      <td className=\"serial-number\">{index + 1}</td>\n                      <td>{row.orderId}</td>\n                      <td>\n                        {row.state}\n                        {!row.stateFound && <span className=\"warning-badge\">⚠️</span>}\n                      </td>\n                      <td>{row.packOfOne}</td>\n                      <td>{row.packOfTwo}</td>\n                      <td>{row.totalWeight}</td>\n                      <td>{row.roundedWeight}</td>\n                      <td>₹{row.ratePerKg}</td>\n                      <td>₹{row.shippingCost}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n\n        <footer className=\"footer\">\n          <p>Built for efficient e-commerce shipping cost calculation</p>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}